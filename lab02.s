
.data
array: .word 1, 2, 3, 4, 3, 5
length: .word 6
number: .word 3
result: .word 0

.text
.global _start

_start:
    li s0, 0          # Μηδενίζει τον καταχωρητή s0 (αποτέλεσμα)
    mv t0, a0         # Αποθηκεύει τη διεύθυνση του πίνακα στον t0
    mv t1, a1         # Αποθηκεύει το πλήθος των στοιχείων στον t1
    mv t2, a2         # Αποθηκεύει τον 32-bit αριθμό που αναζητείται στον t2

loop:
    beq t1, zero, end  # Αν το πλήθος στοιχείων είναι μηδέν, πήγαινε στο τέλος
    lw t3, 0(t0)       # Φόρτωση της λέξης από την τρέχουσα διεύθυνση πίνακα στον t3
    beq t2, t3, match  # Αν το τρέχον στοιχείο ταιριάζει με τον αριθμό, πήγαινε στο match
    addi t0, t0, 4     # Ενημέρωση της διεύθυνσης (πρόσθεση 4 byte)
    addi t1, t1, -1    # Μείωση του πλήθους των στοιχείων κατά 1
    j loop             # Επανάληψη του βρόχου

match:
    addi t0, t0, -4    # Επαναφορά της διεύθυνσης στο στοιχείο που ταιριάζει
    mv s0, t0          # Αποθήκευση της διεύθυνσης στον s0
    addi t0, t0, 4     # Επαναφορά της διεύθυνσης στην επόμενη λέξη
    addi t1, t1, -1    # Μείωση του πλήθους των στοιχείων κατά 1
    j loop             # Επανάληψη του βρόχου

end:
    mv a0, s0          # Μεταφορά του αποτελέσματος στον a0
    li a7, 93          # Κωδικός εξόδου (exit)
    ecall              # Κλήση συστήματος για τερματισμό του προγράμματος